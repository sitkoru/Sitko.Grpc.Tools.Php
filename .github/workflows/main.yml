name: CI

on:
  push:
    branches:
      - "*"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:5.0
    env:
      GRPC_VERSION: v1.39.x
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Install build dependecies
        run: apt update && apt install -y build-essential autoconf libtool pkg-config cmake
      - name: Clone grpc repo
        uses: actions/checkout@v3.1.0
        with:
          repository: "grpc/grpc"
          path: tmp/grpc
          ref: ${{ env.GRPC_VERSION }}
          submodules: recursive
      - name: Build grpc_php_plugin
        working-directory: tmp/grpc
        run: |
          mkdir -p cmake/build
          cd cmake/build
          cmake -j$(nproc) ../..
          make -j$(nproc) protoc
          make -j$(nproc) grpc_php_plugin
      - name: Copy gRPC files to project dir
        working-directory: tmp/grpc
        run: |
          cp cmake/build/grpc_php_plugin ../../src/Sitko.Grpc.Tools.Php/Tools/grpc_php_plugin
          cp cmake/build/third_party/protobuf/protoc ../../src/Sitko.Grpc.Tools.Php/Tools/protoc
          mkdir -p ../../src/Sitko.Grpc.Tools.Php/Proto/google/protobuf
          cp third_party/protobuf/src/google/protobuf/*.proto ../../src/Sitko.Grpc.Tools.Php/Proto/google/protobuf
      - name: Create package
        run: dotnet pack -c Release
  release:
    name: Release
    runs-on: ubuntu-latest
    container: ghcr.io/sitkoru/actions-container
    needs: [ build ]
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install node.js
        uses: actions/setup-node@v2.4.0
        with:
          node-version: '16'
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @sitkoru/semantic-release-config
            @semantic-release/changelog
            @semantic-release/git
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.BOT_EMAIL }}
